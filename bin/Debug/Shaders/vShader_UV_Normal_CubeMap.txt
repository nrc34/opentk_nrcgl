#version 400
layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 vertex_normal;
layout(location = 2) in vec2 vertex_texcoord;
layout(location = 3) in vec4 vertex_color;

//uniform mat4 MatrixModel;
//uniform mat4 MatrixView;
uniform mat4 modelview_matrix;
uniform mat4 projection_matrix;
uniform mat4 model_matrix;
uniform mat4 normal_matrix;



out vec4 colorout;

out Attributes
{
	vec3 position;
	vec3 normal;
	vec2 uv;
} att;

void main()
{
	vec4 vertexViewSpacePosition = modelview_matrix * vec4(vertex_position, 1.0);
	

	att.position = (vec4(vertex_position, 1.0) * model_matrix).xyz;
	att.normal 	=  vertex_normal * mat3(model_matrix);

	gl_Position =   projection_matrix * vertexViewSpacePosition;
}